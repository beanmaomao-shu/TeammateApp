"use strict";const r=require("./uni-data-picker.js"),a=require("../../../../common/vendor.js"),u={name:"UniDataPickerView",emits:["nodeclick","change","datachange","update:modelValue"],mixins:[r.dataPicker],props:{managedMode:{type:Boolean,default:!1},ellipsis:{type:Boolean,default:!0}},created(){this.managedMode||this.$nextTick(()=>{this.loadData()})},methods:{onPropsChange(){this._treeData=[],this.selectedIndex=0,this.$nextTick(()=>{this.loadData()})},handleSelect(e){this.selectedIndex=e},handleNodeClick(e,n,h){if(e.disable)return;const t=this.dataList[n][h],o=t[this.map.text],l=t[this.map.value];if(n<this.selected.length-1?(this.selected.splice(n,this.selected.length-n),this.selected.push({text:o,value:l})):n===this.selected.length-1&&this.selected.splice(n,1,{text:o,value:l}),t.isleaf){this.onSelectedChange(t,t.isleaf);return}const{isleaf:i,hasNodes:s}=this._updateBindData();this.isLocalData?this.onSelectedChange(t,!s||i):this.isCloudDataList?this.onSelectedChange(t,!0):this.isCloudDataTree&&(i?this.onSelectedChange(t,t.isleaf):s||this.loadCloudDataNode(d=>{d.length?(this._treeData.push(...d),this._updateBindData(t)):t.isleaf=!0,this.onSelectedChange(t,t.isleaf)}))},updateData(e){this._treeData=e.treeData,this.selected=e.selected,this._treeData.length?this._updateBindData():this.loadData()},onDataChange(){this.$emit("datachange")},onSelectedChange(e,n){n&&this._dispatchEvent(),e&&this.$emit("nodeclick",e)},_dispatchEvent(){this.$emit("change",this.selected.slice(0))}}};Array||a.resolveComponent("uni-load-more")();const f=()=>"../../../uni-load-more/components/uni-load-more/uni-load-more.js";Math||f();function p(e,n,h,t,o,l){return a.e({a:!e.isCloudDataList},e.isCloudDataList?{}:{b:a.f(e.selected,(i,s,d)=>({a:a.t(i.text||""),b:s,c:s==e.selectedIndex?1:"",d:a.o(c=>l.handleSelect(s),s)}))},{c:a.f(e.dataList[e.selectedIndex],(i,s,d)=>a.e({a:a.t(i[e.map.text]),b:e.selected.length>e.selectedIndex&&i[e.map.value]==e.selected[e.selectedIndex].value},e.selected.length>e.selectedIndex&&i[e.map.value]==e.selected[e.selectedIndex].value?{}:{},{c:i.disable?1:"",d:s,e:a.o(c=>l.handleNodeClick(i,e.selectedIndex,s),s)})),d:e.loading},e.loading?{e:a.p({contentText:e.loadMore,status:"loading"})}:{},{f:e.errorMessage},e.errorMessage?{g:a.t(e.errorMessage)}:{})}const m=a._export_sfc(u,[["render",p]]);wx.createComponent(m);
